this.android=this.android||{},this.android.widget=this.android.widget||{},this.android.widget.coordinator=function(){"use strict";const e=android.lib,{getElementAsNode:t}=squared.lib.session,{NODE_RESOURCE:o}=squared.base.lib.enumeration,{EXT_ANDROID:i,SUPPORT_ANDROID:n,SUPPORT_ANDROID_X:s}=e.constant,{CONTAINER_NODE:d}=e.enumeration,{createViewAttribute:r}=e.util,a=android.base.Resource;class c extends squared.base.ExtensionUI{processNode(e,l){var u;const O=this.application.extensionManager,R=r(this.options[e.elementId]);a.formatOptions(R,O.optionValueAsBoolean(i.RESOURCE_STRINGS,"numberResourceValue"));const m=c.findNestedElement(e.element,"android.widget.toolbar");if(m){const o=t(m,e.sessionId);if(o){const t=null===(u=O.retrieve("android.widget.toolbar"))||void 0===u?void 0:u.options[o.elementId];t&&"collapsingToolbar"in t&&e.android("fitsSystemWindows","true")}}const p=e.api<29?n.COORDINATOR:s.COORDINATOR;return e.setControlType(p,d.BLOCK),e.exclude({resource:o.ASSET}),e.render(l),e.renderExclude=!1,{output:{type:1,node:e,controlName:p}}}postOptimize(e){if(e.documentRoot){if(e.inlineWidth)for(const t of e)if(t.rightAligned){e.setLayoutWidth("match_parent",!0);break}if(e.inlineHeight)for(const t of e)if(t.bottomAligned){e.setLayoutHeight("match_parent",!0);break}}}}const l=new c("android.widget.coordinator",2);return squared&&squared.includeAsync(l),l}();
