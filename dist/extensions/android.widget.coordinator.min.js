this.android=this.android||{},this.android.widget=this.android.widget||{},this.android.widget.coordinator=function(){"use strict";const e=android.base.Resource,t=squared.lib.session,i=android.lib.constant,o=android.lib.enumeration,n=android.lib.util,d=squared.base.lib.enumeration;class s extends squared.base.ExtensionUI{processNode(r,a){const l=n.createViewAttribute(this.options[r.elementId]);e.formatOptions(l,this.application.extensionManager.optionValueAsBoolean(i.EXT_ANDROID.RESOURCE_STRINGS,"numberResourceValue"));const c=s.findNestedElement(r.element,"android.widget.toolbar");if(c){const e=t.getElementAsNode(c,r.sessionId);if(e){const t=this.application.extensionManager.retrieve("android.widget.toolbar");t&&t.options[e.elementId]&&"collapsingToolbar"in t.options[e.elementId]&&r.android("fitsSystemWindows","true")}}return r.setControlType(i.SUPPORT_ANDROID.COORDINATOR,o.CONTAINER_NODE.BLOCK),r.exclude(d.NODE_RESOURCE.ASSET),r.renderExclude=!1,r.render(a),{output:{type:1,node:r,controlName:i.SUPPORT_ANDROID.COORDINATOR}}}postOptimize(e){if(e.documentRoot){if(e.inlineWidth)for(const t of e)if(t.rightAligned){e.setLayoutWidth(i.STRING_ANDROID.MATCH_PARENT,!0);break}if(e.inlineHeight)for(const t of e)if(t.bottomAligned){e.setLayoutHeight(i.STRING_ANDROID.MATCH_PARENT,!0);break}}}}const r=new s("android.widget.coordinator",2);return squared&&squared.includeAsync(r),r}();
