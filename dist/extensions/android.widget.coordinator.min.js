this.android=this.android||{},this.android.widget=this.android.widget||{},this.android.widget.coordinator=function(){"use strict";var e=android.base.Resource;const t=squared.base.lib.enumeration,i=squared.lib.dom,o=android.lib.constant,n=android.lib.enumeration,d=android.lib.util;class r extends squared.base.Extension{processNode(a,s){const l=d.createViewAttribute(a.element?this.options[a.element.id]:void 0);a.setControlType(o.SUPPORT_ANDROID.COORDINATOR,n.CONTAINER_NODE.BLOCK),a.exclude({resource:t.NODE_RESOURCE.ASSET}),a.render(s);const c=this.application.controllerHandler.renderNodeStatic(o.SUPPORT_ANDROID.COORDINATOR,a.renderDepth,e.formatOptions(l,this.application.extensionManager.optionValueAsBoolean(o.EXT_ANDROID.RESOURCE_STRINGS,"numberResourceValue")),"","",a,!0),u=r.findNestedByName(a.element,"android.widget.toolbar");if(u){const e=i.getElementAsNode(u);if(e&&e.element){const t=this.application.extensionManager.retrieve("android.widget.toolbar");if(t){"collapsingToolbar"in d.createViewAttribute(t.options[e.element.id])&&a.android("fitsSystemWindows","true")}}}return{output:c}}postProcedure(e){e.documentRoot&&(e.inlineWidth&&e.some(t=>!!t.rightAligned&&(e.android("layout_width","match_parent",!0),!0)),e.inlineHeight&&e.some(t=>!!t.bottomAligned&&(e.android("layout_height","match_parent",!0),!0)))}}const a=new r("android.widget.coordinator",2);return squared&&squared.includeAsync(a),a}();
