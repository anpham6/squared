this.android=this.android||{},this.android.widget=this.android.widget||{},this.android.widget.coordinator=function(){"use strict";const{constant:e,enumeration:t,util:o}=android.lib,i=android.base.Resource,n=squared.lib.session,s=squared.base.lib.enumeration;class d extends squared.base.ExtensionUI{processNode(r,a){const l=o.createViewAttribute(this.options[r.elementId]);i.formatOptions(l,this.application.extensionManager.optionValueAsBoolean(e.EXT_ANDROID.RESOURCE_STRINGS,"numberResourceValue"));const c=d.findNestedElement(r.element,"android.widget.toolbar");if(c){const e=n.getElementAsNode(c,r.sessionId);if(e){const t=this.application.extensionManager.retrieve("android.widget.toolbar");t&&t.options[e.elementId]&&"collapsingToolbar"in t.options[e.elementId]&&r.android("fitsSystemWindows","true")}}return r.setControlType(e.SUPPORT_ANDROID.COORDINATOR,t.CONTAINER_NODE.BLOCK),r.exclude(s.NODE_RESOURCE.ASSET),r.renderExclude=!1,r.render(a),{output:{type:1,node:r,controlName:e.SUPPORT_ANDROID.COORDINATOR}}}postOptimize(t){if(t.documentRoot){if(t.inlineWidth)for(const o of t)if(o.rightAligned){t.setLayoutWidth(e.STRING_ANDROID.MATCH_PARENT,!0);break}if(t.inlineHeight)for(const o of t)if(o.bottomAligned){t.setLayoutHeight(e.STRING_ANDROID.MATCH_PARENT,!0);break}}}}const r=new d("android.widget.coordinator",2);return squared&&squared.includeAsync(r),r}();
