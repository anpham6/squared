this.android=this.android||{},this.android.widget=this.android.widget||{},this.android.widget.coordinator=function(){"use strict";var e=android.base.Resource;const t=android.lib,{getElementAsNode:o}=squared.lib.session,{NODE_RESOURCE:i}=squared.base.lib.enumeration,{EXT_ANDROID:n,SUPPORT_ANDROID:r,SUPPORT_ANDROID_X:s}=t.constant,{CONTAINER_NODE:d}=t.enumeration,{createViewAttribute:a}=t.util;class c extends squared.base.ExtensionUI{processNode(t,l){var u;const O=this.application.extensionManager,R=a(this.options[t.elementId]);e.formatOptions(R,O.optionValueAsBoolean(n.RESOURCE_STRINGS,"numberResourceValue"));const m=c.findNestedElement(t.element,"android.widget.toolbar");if(m){const e=o(m,t.sessionId);if(e){const o=null===(u=O.retrieve("android.widget.toolbar"))||void 0===u?void 0:u.options[e.elementId];o&&"collapsingToolbar"in o&&t.android("fitsSystemWindows","true")}}const p=t.api<29?r.COORDINATOR:s.COORDINATOR;return t.setControlType(p,d.BLOCK),t.exclude({resource:i.ASSET}),t.render(l),t.renderExclude=!1,{output:{type:1,node:t,controlName:p}}}postOptimize(e){if(e.documentRoot){if(e.inlineWidth)for(const t of e)if(t.rightAligned){e.setLayoutWidth("match_parent",!0);break}if(e.inlineHeight)for(const t of e)if(t.bottomAligned){e.setLayoutHeight("match_parent",!0);break}}}}const l=new c("android.widget.coordinator",2);return squared&&squared.includeAsync(l),l}();
