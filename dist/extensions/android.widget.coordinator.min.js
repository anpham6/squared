this.android=this.android||{},this.android.widget=this.android.widget||{},this.android.widget.coordinator=function(){"use strict";const{getElementAsNode:e}=squared.lib.session,{NODE_RESOURCE:t}=squared.base.lib.enumeration,o=android.lib,{EXT_ANDROID:i,SUPPORT_ANDROID:n,SUPPORT_ANDROID_X:s}=o.constant,{CONTAINER_NODE:d}=o.enumeration,{createViewAttribute:r}=o.util,{Resource:a}=android.base;class l extends squared.base.ExtensionUI{processNode(o,c){var u;const O=this.application.extensionManager,R=r(this.options[o.elementId]);a.formatOptions(R,O.optionValueAsBoolean(i.RESOURCE_STRINGS,"numberResourceValue"));const g=l.findNestedElement(o.element,"android.widget.toolbar");if(g){const t=e(g,o.sessionId);if(t){const e=null===(u=O.retrieve("android.widget.toolbar"))||void 0===u?void 0:u.options[t.elementId];e&&"collapsingToolbar"in e&&o.android("fitsSystemWindows","true")}}const m=o.localSettings.targetAPI<29?n.COORDINATOR:s.COORDINATOR;return o.setControlType(m,d.BLOCK),o.exclude(t.ASSET),o.renderExclude=!1,o.render(c),{output:{type:1,node:o,controlName:m}}}postOptimize(e){if(e.documentRoot){if(e.inlineWidth)for(const t of e)if(t.rightAligned){e.setLayoutWidth("match_parent",!0);break}if(e.inlineHeight)for(const t of e)if(t.bottomAligned){e.setLayoutHeight("match_parent",!0);break}}}}const c=new l("android.widget.coordinator",2);return squared&&squared.includeAsync(c),c}();
