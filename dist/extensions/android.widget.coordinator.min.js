this.android=this.android||{},this.android.widget=this.android.widget||{},this.android.widget.coordinator=function(){"use strict";var e=android.base.Resource;const t=squared.base.lib.enumeration,i=squared.lib.session,o=android.lib.constant,n=android.lib.enumeration,d=android.lib.util;class r extends squared.base.Extension{processNode(s,a){const l=d.createViewAttribute(this.options[s.elementId]);e.formatOptions(l,this.application.extensionManager.optionValueAsBoolean(o.EXT_ANDROID.RESOURCE_STRINGS,"numberResourceValue"));const c=r.findNestedElement(s.element,"android.widget.toolbar");if(c){const e=i.getElementAsNode(c,s.sessionId);if(e){const t=this.application.extensionManager.retrieve("android.widget.toolbar");t&&t.options[e.elementId]&&"collapsingToolbar"in t.options[e.elementId]&&s.android("fitsSystemWindows","true")}}return s.setControlType(o.SUPPORT_ANDROID.COORDINATOR,n.CONTAINER_NODE.BLOCK),s.exclude({resource:t.NODE_RESOURCE.ASSET}),s.render(a),{output:{type:1,node:s,controlName:o.SUPPORT_ANDROID.COORDINATOR}}}postOptimize(e){if(e.documentRoot){if(e.inlineWidth)for(const t of e)if(t.rightAligned){e.android("layout_width","match_parent",!0);break}if(e.inlineHeight)for(const t of e)if(t.bottomAligned){e.android("layout_height","match_parent",!0);break}}}}const s=new r("android.widget.coordinator",2);return squared&&squared.includeAsync(s),s}();
